<?php

namespace App\Http\Controllers\Api\V1\Admin;

use App\Models\$CLASS_NAME$;
use App\Traits\ApiResponser;
use Illuminate\Http\Request;
use App\Services\$CLASS_NAME$Service;
use App\Http\Controllers\Controller;
use App\Http\Requests\$CLASS_NAME$\Request as $CLASS_NAME$Request;
use App\Http\Resources\$CLASS_NAME$\Resource as $CLASS_NAME$Resource;
use App\Http\Resources\$CLASS_NAME$\Collection as $CLASS_NAME$Collection;

class $CLASS_NAME$Controller extends Controller
{
    use ApiResponser;

    private $$SINGULAR_VARIABLE$Service;

    public function __construct()
    {
        $this->$SINGULAR_VARIABLE$Service = new $CLASS_NAME$Service;
    }

    public function index(Request $request)
    {
        $$PLURAL_VARIABLE$ = $this->$SINGULAR_VARIABLE$Service->collection($request->all());

        return new $CLASS_NAME$Collection($$PLURAL_VARIABLE$);
    }

    public function store($CLASS_NAME$Request $request)
    {
        $$SINGULAR_VARIABLE$Obj = $this->$SINGULAR_VARIABLE$Service->store($request->validated());

        return isset($$SINGULAR_VARIABLE$Obj['errors']) ? $this->error($$SINGULAR_VARIABLE$Obj) : $this->success($$SINGULAR_VARIABLE$Obj);
    }

    public function show($CLASS_NAME$ $$SINGULAR_VARIABLE$)
    {
        $$SINGULAR_VARIABLE$Obj = $this->$SINGULAR_VARIABLE$Service->resource($$SINGULAR_VARIABLE$->id);

        return new $CLASS_NAME$Resource($$SINGULAR_VARIABLE$Obj);
    }

    public function update($CLASS_NAME$ $$SINGULAR_VARIABLE$, $CLASS_NAME$Request $request)
    {
        $$SINGULAR_VARIABLE$Obj = $this->$SINGULAR_VARIABLE$Service->update($$SINGULAR_VARIABLE$->id, $request->validated());

        return isset($$SINGULAR_VARIABLE$Obj['errors']) ? $this->error($$SINGULAR_VARIABLE$Obj) : $this->success($$SINGULAR_VARIABLE$Obj);
    }

    public function destroy($CLASS_NAME$ $$SINGULAR_VARIABLE$)
    {
        $$SINGULAR_VARIABLE$ = $this->$SINGULAR_VARIABLE$Service->destroy($$SINGULAR_VARIABLE$->id);

        return $this->success($$SINGULAR_VARIABLE$);
    }
}